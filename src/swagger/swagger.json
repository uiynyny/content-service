{
    "swagger": "2.0",
    "info": {
        "description": "This is a simple example NodeJS API project to demonstrate Swagger Documentation",
        "version": "1.0.0",
        "title": "Naka API",
        "contact": {
            "email": "dexter_zhang@gmail.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        }
    },
    "schemes": [
        "http"
    ],
    "host": "localhost:3000",
    "basePath": "/naka/api",
    "paths": {
        "/": {
            "get": {
                "summary": "Get all contents",
                "description": "Get all contents",
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/todosResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid status value",
                        "schema": {
                            "$ref": "#/definitions/InvalidResponse"
                        }
                    }
                }
            },
            "post": {
                "summary": "Save a content",
                "description": "Save a content",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "content object",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "_id": {
                                    "type": "object",
                                    "$ref": "#/definitions/Content"
                                }
                            }
                        }
                    }
                ]
            }
        },
        "/{username}": {
            "get": {
                "summary": "Get all contents for a user",
                "description": "Get all contents a user",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "username",
                        "in": "path",
                        "description": "all content of this user",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/todosResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid status value",
                        "schema": {
                            "$ref": "#/definitions/InvalidResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "Content": {
            "type": "object",
            "properties": {
                "username": "string",
                "timestamp": "string",
                "content": "string",
                "imageUrls": "array",
                "reply": "array",
                "like": "integer",
                "geolocation": {
                    "type": {
                        "lat": "number",
                        "lng": "number"
                    }
                }
            }
        },
        "Task": {
            "type": "object",
            "properties": {
                "task": {
                    "type": {
                        "name": {
                            "type": "string"
                        },
                        "description": {
                            "type": "string"
                        },
                        "createdBy": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "InvalidResponse": {
            "type": "object",
            "properties": {
                "statusCode": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            }
        }
    }
}